package com.springbootrest.controller;

import com.springbootrest.model.User;
import com.springbootrest.model.UserRequest;
import com.springbootrest.model.UserResponse;
import com.springbootrest.service.IUserService;
import com.springbootrest.util.JwtUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.security.Principal;

@RestController
@RequestMapping("/user")
public class UserController {

    @Autowired
    private IUserService userService; //Has a relation

    @Autowired
    private JwtUtil jwtUtil;

    @Autowired
    private AuthenticationManager authenticationManager;


    //1. Save User Data In Database
    @PostMapping("/save")
    public ResponseEntity<String> saveUser(@RequestBody User user){

        Integer id= userService.saveUser(user);
        String body= "User "+id+" Saved";
        //return new ResponseEntity<String>(body, HttpStatus.OK);
        return ResponseEntity.ok(body);

    }

    // 2. Validate User and Generate Token(login)
    @PostMapping("/login")
    public ResponseEntity<UserResponse> loginUser(@RequestBody UserRequest request )
    {
        // Validate username/password with Database
        //if it valid token will be generate else InvalidUserAuthEntryPoint is triggred
        authenticationManager.authenticate(new UsernamePasswordAuthenticationToken(
                request.getUsername(), request.getPassword()));

        String token= jwtUtil.generateToken(request.getUsername());
        return ResponseEntity.ok(new UserResponse(token,"Success! Generated By AshishITech"));

    }
    // 3. After login only
    @PostMapping("/welcome")
    public ResponseEntity<String> assessDate(Principal principal){
        return ResponseEntity.ok("Hello User!! " + principal.getName());
    }

}
